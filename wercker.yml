# This references a standard debian container from the
# Docker Hub https://registry.hub.docker.com/_/debian/
# Read more about containers on our dev center
# http://devcenter.wercker.com/docs/containers/index.html
box: debian
# You can also use services such as databases. Read more on our dev center:
# http://devcenter.wercker.com/docs/services/index.html
# services:
    # - postgres
    # http://devcenter.wercker.com/docs/services/postgresql.html

    # - mongo
    # http://devcenter.wercker.com/docs/services/mongodb.html

# This is the build pipeline. Pipelines are the core of wercker
# Read more about pipelines on our dev center
# http://devcenter.wercker.com/docs/pipelines/index.html
build:
    # Steps make up the actions in your pipeline
    # Read more about steps on our dev center:
    # http://devcenter.wercker.com/docs/steps/index.html
  steps:
    - install-packages:
        packages: git
    - script:
        name: initalize git submodules
        code: git submodule update --init --recursive
    - arjen/hugo-build:
        version: "0.27.1"
        theme: "aokashi_base"
deploy:
  steps:
    - install-packages:
        packages: ssh-client rsync
    - add-to-known_hosts:
        hostname: aokashi.net
    - add-ssh-key:
        keyname: SVPSKEYN
    - script:
        name: create ssh key directory
        code: |
            cd $WERCKER_ROOT
            mkdir .ssh
            chmod 700 .ssh
    - create-file:
        name: create ssh key file
        filename: $WERCKER_ROOT/.ssh/SVPSKey
        content: $SVPSKEYN_PRIVATE
        overwrite: true
    - script:
        name: set permission ssh key file
        code: chmod 600 $WERCKER_ROOT/.ssh/SVPSKey
    - script:
        name: deploy to server
        code: |
            echo "ssh -p $SVPSKEYP -i $WERCKER_ROOT/.ssh/SVPSKey"
            rsync -rlOtv -e "ssh -p $SVPSKEYP -i $WERCKER_ROOT/.ssh/SVPSKey -o StrictHostKeyChecking=no" $WERCKER_ROOT/public/ aokashi@aokashi.net:/var/www/www/
